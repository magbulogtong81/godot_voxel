name:  Android Builds
on:
  push:
    branches: [ godot3.x, github_actions ]
  pull_request:
    branches: [ godot3.x ]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.x
  SCONS_CACHE_LIMIT: 4096
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux-editor:
    runs-on: "ubuntu-20.04"
    name: Editor
    

  strategy:
      matrix:
        include:
        ####TEPMPLATES####
          - name: android-32bit-release-arm
            target: release
            arch: armv7
            executable_name: android_release.apk
            
          - name: android-64bit-release-arm64
            target: release
            arch: arm64v8
            executable_name: android_release.apk
            
          - name: android-32bit-debug-arm
            target: release_debug
            arch: armv7
            executable_name: android_debug.apk
            
          - name: android-64bit-debug-arm64
            target: release_debug
            arch: arm64v8
            executable_name: android_debug.apk
            
          - name: android-32bit-debug-x86
            target: release_debug
            arch: x86
            executable_name: android_debug.apk
            
          - name: android-64bit-debug-x86_64
            target: release_debug
            arch: x86_64
            executable_name: android_debug.apk
            
          - name: android-32bit-release-x86
            target: release
            arch: x86
            executable_name: android_release.apk
            
          - name: android-64bit-release-x86_64
            target: release
            arch: x86_64
            executable_name: android_release.apk
          ####EDITOR####
          - name: android-64bit-editor-x86_64
            target: editor
            arch: x86_64
            executable_name: android_editor.apk
            
          - name: android-32bit-editor-x86
            target: editor
            arch: x86
            executable_name: android_editor.apk
            
          - name: android-32bit-editor-arm
            target: editor
            arch: armv7
            executable_name: android_editor.apk
            
          - name: android-32bit-editor-arm64
            target: editor
            arch: arm64v8
            executable_name: android_editor.apk



    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: 3.x

      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: modules/voxel

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f modules/voxel/misc/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: linux-editor-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}-${{matrix.target}}-${{matrix.arch}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}-${{matrix.target}}-${{matrix.arch}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all platform=android target=${{matrix.target}} arch=${{matrix.arch}}

      # TODO Such tests are able to run from Godot 4.0 only
      # Execute unit tests for the editor
      #- name: Unit Tests
      #  run: |
      #    ./bin/godot.linuxbsd.opt.tools.64 --test

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.executable_name}}-${{matrix.target}}-${{matrix.arch}}
          path: bin/${{matrix.executable_name}}

